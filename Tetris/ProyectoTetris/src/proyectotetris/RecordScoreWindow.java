/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectotetris;


/**
 *
 * @author mfss0
 */
public class RecordScoreWindow extends javax.swing.JFrame {
    private Score scoreArray[];
    private FileManager fileRS;
    private final int sizeArray = 10;
    private int count;
    
    /**
     * Creates new form RecordScoreWindow
     */
    public RecordScoreWindow() {

        initComponents();
        this.scoreArray = new Score [sizeArray];
        innit();
        fileRS = new FileManager();
        readScore();
        update();
        
    }
    
    private void innit(){
        for(int i = 0; i<sizeArray; i++)
            scoreArray[i] = new Score();
    }

    public void update(){
        recordTextA.setText(this.toString());
    }
    
    private boolean checkScore(Score scr){
        if(count<sizeArray){
            return true;
        }
        for (int i = 0; i < sizeArray; i++) {
            if(scoreArray[i].getPoints() <= scr.getPoints())
                return true;
        }
        return false;
    }

    public void addScore(Score scr){
        if(checkScore(scr)){
            if(count == 0){
                scoreArray[0] = scr;
                count++;
                writeScore();
                return;
            }
        
            Score tmp, saved = null;
            tmp = scr;
            for (int i = 0; i < sizeArray; i++) {
                if(saved != null && saved.getName().equals(scr.getName())){
                    count--;
                    break;
                }

                if(scoreArray[i].getPoints() <= tmp.getPoints()){
                    if(!scoreArray[i].getName().equals(scr.getName())){
                        saved = scoreArray[i];
                        scoreArray[i]=tmp;
                        tmp = saved;
                        
                    }
                    else{
                        count--;
                        scoreArray[i]=tmp;
                        break;
                        
                    }

                }
                else if(scoreArray[i].getName().equals(scr.getName())&&tmp == scr){
                    return;
                }
            }
            writeScore();
            count++;
        }
        

    }



    public void writeScore(){
        
        fileRS.escribirRecordScore("recordGame.bin", scoreArray);
    }

    private void readScore(){
        Score readArray[] = fileRS.leerRecordScore("recordGame.bin");
        count = 0;
        if (readArray != null){
            scoreArray = readArray;
            for(int i = 0; i<readArray.length; i++){
                if(readArray[i].getPoints() == 0){
                    return;
                }
                count++;
            }
            
        }
    }

    @Override
    public String toString(){
        readScore();
        String str="";
        for (int i = 0; i < count; i++) {
            str+=scoreArray[i].getName() +"\t"+ scoreArray[i].getPoints() +"\n";
        }
        return str;
        
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        recorLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        recordTextA = new javax.swing.JTextArea();
        backgroundLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panel.setBackground(new java.awt.Color(0, 0, 0));
        panel.setLayout(null);

        recorLbl.setFont(new java.awt.Font("OCR A Extended", 1, 48)); // NOI18N
        recorLbl.setForeground(new java.awt.Color(255, 255, 255));
        recorLbl.setText("Record Score");
        panel.add(recorLbl);
        recorLbl.setBounds(90, 30, 430, 50);

        recordTextA.setEditable(false);
        recordTextA.setBackground(new java.awt.Color(204, 0, 255));
        recordTextA.setColumns(20);
        recordTextA.setFont(new java.awt.Font("OCR A Extended", 1, 18)); // NOI18N
        recordTextA.setRows(5);
        recordTextA.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        recordTextA.setOpaque(false);
        jScrollPane1.setViewportView(recordTextA);

        panel.add(jScrollPane1);
        jScrollPane1.setBounds(40, 100, 520, 300);

        backgroundLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectotetris/img/fondoScoreRecord.jpg"))); // NOI18N
        backgroundLbl.setOpaque(true);
        panel.add(backgroundLbl);
        backgroundLbl.setBounds(0, -10, 600, 450);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 601, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel recorLbl;
    private javax.swing.JTextArea recordTextA;
    // End of variables declaration//GEN-END:variables
}
